#!/usr/bin/python3
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'scantool.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import time,os
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(531, 449)
        MainWindow.setFixedWidth(531)
        MainWindow.setFixedHeight(449)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("ico.png"),QtGui.QIcon.Normal,QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setAutoFillBackground(True)
        MainWindow.setStyleSheet("background-color: rgb(10, 10, 10);\n"
        "alternate-background-color: rgb(255, 255, 255);\n" "color: rgb(0, 255,0);\n")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.outputwindow = QtWidgets.QTextEdit(self.centralwidget)
        self.outputwindow.setGeometry(QtCore.QRect(10, 10, 511, 271))
        self.outputwindow.setAutoFillBackground(True)
        self.outputwindow.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);\n"
"selection-color: rgb(255, 255, 255);\n"
"font: 75 11pt \"xos4 Terminus\";")
        self.outputwindow.setObjectName("outputwindow")
        self.outputwindow.setAlignment(QtCore.Qt.AlignCenter)
        self.rundiscovery = QtWidgets.QPushButton(self.centralwidget)
        self.rundiscovery.setGeometry(QtCore.QRect(30, 300, 80, 23))
        self.rundiscovery.setObjectName("rundiscovery")
        self.rundiscovery.clicked.connect(self.rdiscovery)
        self.portscan = QtWidgets.QPushButton(self.centralwidget)
        self.portscan.setGeometry(QtCore.QRect(400, 320, 80, 23))
        self.portscan.setObjectName("portscan")
        self.portscan.clicked.connect(self.runportscan)
        self.hostname = QtWidgets.QLineEdit(self.centralwidget)
        self.hostname.setGeometry(QtCore.QRect(320, 290, 171, 23))
        self.hostname.setStyleSheet("background-color: rgb(170,255,0);\n""color: rgb(0,0,0);\n")
        self.hostname.setObjectName("hostname")
        self.hostname.returnPressed.connect(self.runportscan)
        self.nmapscan = QtWidgets.QPushButton(self.centralwidget)
        self.nmapscan.setGeometry(QtCore.QRect(400, 360, 80, 23))
        self.nmapscan.setObjectName("nmapscan")
        self.nmapscan.clicked.connect(self.nmscanner)
        self.scannedips = QtWidgets.QListWidget(self.centralwidget)
        self.scannedips.setGeometry(QtCore.QRect(120, 300, 131, 131))
        self.scannedips.setObjectName("listWidget")

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Scanning Tool"))
        self.rundiscovery.setText(_translate("MainWindow", "Discover"))
        self.portscan.setText(_translate("MainWindow", "Port Scan"))
        self.nmapscan.setText(_translate("MainWindow", "Terminal"))
    def showdialog(self,out):
       msg = QtWidgets.QMessageBox()
       #msg.setIcon(QMessageBox.Information)

       msg.setText("Nmap")
       msg.setInformativeText(out)
       msg.setWindowTitle("Nmap")
       msg.setStandardButtons(QtWidgets.QMessageBox.Ok | QtWidgets.QMessageBox.Cancel)
       retval = msg.exec_()

    def runportscan(self):
      self.outputwindow.clear()
      self.outputwindow.setAlignment(QtCore.Qt.AlignCenter)
      self.outputwindow.setTextColor(QtGui.QColor(0,255,0))
      self.outputwindow.append("[LIST OF OPEN PORTS]\n")
      self.outputwindow.setTextColor(QtGui.QColor(255,255,255))
      sys.path.insert(1,'tool/')
      host = self.hostname.text()
      import scanner
      data, ip= scanner.run(host)
      for i in data:
        self.outputwindow.append(i)
        self.outputwindow.append("[Status:")
        self.outputwindow.setTextColor(QtGui.QColor(0,255,0))
        self.outputwindow.insertPlainText("Open")
        self.outputwindow.setTextColor(QtGui.QColor(255,255,255))
        self.outputwindow.insertPlainText("]\n")
        QtWidgets.QApplication.processEvents()
      self.outputwindow.setAlignment(QtCore.Qt.AlignLeft)
      self.outputwindow.append("[HOST IP : ")
      self.outputwindow.setTextColor(QtGui.QColor(0,255,0))
      self.outputwindow.insertPlainText(ip)
      self.outputwindow.setTextColor(QtGui.QColor(255,255,255))
      self.outputwindow.insertPlainText("]\n")
    def rdiscovery(self):
      time.sleep(6)
      sys.path.insert(1,'tool/')
      import discover
      data = discover.map_network()
      for d in data:
        self.scannedips.addItem(d)
        QtWidgets.QApplication.processEvents()
    def nmscanner(self):
      os.system("python3 app.py")

if __name__ == "__main__":
    import sys
    #db_ipscan = data_nmap()
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
